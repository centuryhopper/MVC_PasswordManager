@inject IHttpContextAccessor ctx
@inject UserManager<ApplicationUser> userManager
@using PasswordManager.Models
@using PasswordManager.Utils
@model AccountModel

@{
    ViewData["Title"] = "Password List";
    var user = await userManager.FindByIdAsync(ctx.HttpContext!.Session.GetString(SessionVariables.userId)!);
}

<div class="text-center text-wrap">
    <h1 class="display-4">Passwords</h1>
    @if (user is not null && await userManager.IsInRoleAsync(user, "Admin"))
    {
        <ul style="list-style: none">
            <li>Admin ID:</li>
            <li>@ctx.HttpContext!.Session.GetString(SessionVariables.userId)</li>
        </ul>
    }

    @if (TempData["editError"] is not null)
    {
        <div class="alert alert-danger">@TempData["editError"]</div>
    }

    <section class="vh-100" style="background-color: "#eee";">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                    <div class="card rounded-3">
                        <div class="card-body p-4">
                            <h4 class="text-center my-3 pb-3">Password database query</h4>
                            <div class="col-12">
                                <div class="form-outline">

                                    <input id="filterInput" type="text" asp-for="title" class="form-control" placeholder="Filter by title..." ariaLabel="titleFilter">

                                    <form action="@Url.Action("AddAccount", "Home")" method="post" id="contactForm">
                                        @Html.AntiForgeryToken()
                                        <div class="input-group">
                                            <input
                                                asp-for="title"
                                                class="form-control"
                                                id="input1"
                                                placeholder="Enter a title..."
                                                type="text"
                                                ariaLabel="title"
                                                required
                                            >

                                            <input
                                                asp-for="username"
                                                class="form-control"
                                                id="input2"
                                                placeholder="Enter a username..."
                                                type="text"
                                                ariaLabel="username"
                                                required
                                            >

                                            <input
                                                asp-for="password"
                                                class="form-control"
                                                id="input3"
                                                placeholder="Enter a password..."
                                                type="text"
                                                ariaLabel="password"
                                                required
                                            >
                                        </div>

                                        <input type="hidden" name="userId" asp-for="userId" value="@(ctx.HttpContext!.Session.GetString(SessionVariables.userId))" />

                                        <button
                                            type="submit"
                                            class="btn btn-primary ms-1">
                                            Add account
                                        </button>
                                    </form>

                                </div>
                            </div>
                            @if (TempData["addedAccount"] is not null)
                            {
                                <div class="alert alert-info">@TempData["addedAccount"]</div>
                            }
                            else if (TempData["errorAddingAccount"] is not null)
                            {
                                <div class="alert alert-danger">@TempData["errorAddingAccount"]</div>
                            }

                            @* @await Component.InvokeAsync("EditDetails", new {accountId="aa9723f8-d1c5-42de-bfab-b24621c88963", idx=1}) *@

                            <div id="accountListView"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>



@section Scripts
{
    <script>
        $(() => {
            getUsers()

            // responsive filtering from this code snippet
            $('#filterInput').on('keyup', () => {
                getUsers()
            })
        })

        function submitForm() {
            // console.log('submitting');
            document.getElementById("editForm").submit();
        }
        var getUsers = () => {
            $.ajax({
                url: '@Url.Action("FilterAccounts", "Home")',
                datatype: 'html',
                method: 'GET',
                data: {filterTerm: $('#filterInput').val()},
                success: (res) => {
                    // clear the html before outputting the res
                    $('#accountListView').html('').html(res)
                },
                error: (err) => {
                    console.log(err)
                }
            })
        }
    </script>
}

