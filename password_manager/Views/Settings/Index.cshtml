@inject IHttpContextAccessor ctx
@inject UserManager<ApplicationUser> userManager
@using password_manager.Utils

@{
    ViewData["Title"] = "Settings";
    var userId = ctx.HttpContext!.Session.GetString(Constants.userId);
    var user = await userManager.FindByIdAsync(userId!);
}

<div class="text-center">
    <div class="list-group">
        @if (userId is not null)
        {
            <span id="delete_@userId">
                <a
                    href="#"
                    class="list-group-item list-group-item-action text-danger"
                    onclick="confirmDelete('@userId', true)"
                >
                    Delete account
                </a>
            </span>

            <span id="confirmDelete_@userId" style="display:none">
                <span>Are you sure you want to delete your account? All your passwords will be lost and cannot be recovered!</span>
                <a class="list-group-item list-group-item-action text-danger my-4" href="@Url.Action("DeleteAccount", "Settings", new {})">Yes</a>
                <a class="list-group-item list-group-item-action text-primary" href="#" onclick="confirmDelete('@userId', false)">No</a>
            </span>
        }
        <a class="btn btn-info" href="@Url.Action("ChangePassword", "Settings")">Change Password</a>
        <a class="btn btn-info" href="@Url.Action("EditUserInfo", "Settings")">Edit Profile</a>
        <a class="btn btn-info" href="@Url.Action("ToggleTwoFactor", "Settings")">@(user!.TwoFactorEnabled ? "Two factor authentication is enabled. Click To disable." : "Two factor authentication is disabled. Click To enable.")</a>
    </div>
</div>

